
% Lionel du Peloux (2018)
% https://fr.sharelatex.com/learn/Writing_your_own_class#Preliminary_declarations




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% IDENTIFICATION
%%
%%%%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{blurb}[2017/12/20 Lionel du Peloux]




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PRELIMINARY DECLARATIONS
%%
%%%%%

\RequirePackage{kvoptions}  		% key-value options for package
\RequirePackage{xkeyval}  			% key-value options for macros
\RequirePackage{etoolbox}
\RequirePackage{ifthen}
\RequirePackage{xstring}
\RequirePackage{calc}
\RequirePackage{xparse}
\RequirePackage{xargs}				% commands with optional arguments
\RequirePackage{refcount}
\RequirePackage{lastpage}
\RequirePackage{xcolor}
\RequirePackage{tikz,tikzpagenodes}
\usetikzlibrary{calc,backgrounds,positioning}
\RequirePackage{rotating}
\RequirePackage{adjustbox}
\RequirePackage{graphicx}
\RequirePackage{afterpage}
\RequirePackage{eso-pic}
\RequirePackage{geometry}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% DECLARE OPTIONS
%%
%%%%%

\SetupKeyvalOptions{family=blurb,prefix=opt@} 
\DeclareStringOption[]{booksize}[TB_8x10]
\DeclareStringOption[0mm]{top}[0mm]
\DeclareStringOption[0mm]{outer}[0mm]
\DeclareStringOption[0mm]{bottom}[0mm]
\DeclareStringOption[0mm]{inner}[0mm]
\DeclareStringOption[0mm]{binding}[0mm]
\DeclareStringOption[2]{pagemodulo}[2]
\DeclareStringOption[no]{cover}[hard]
\DeclareStringOption[20mm]{gutter}[20mm]
\DeclareBoolOption[false]{showrules}
\DeclareBoolOption[false]{showframe}
\DeclareBoolOption[false]{showbleed}
\DeclareBoolOption[false]{showcanon}
\DeclareBoolOption[false]{nobleed}
\ProcessKeyvalOptions*





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PARAMETER FIELDS
%%
%%%%%

% paper size
\newlength{\@PaperWidth}				% paper width 
\newlength{\@PaperHeight}				% paper height 

% bleed margins
\newlength{\@BleedInnerMargin}			% inner bleed margin
\newlength{\@BleedOuterMargin}			% outer bleed margin
\newlength{\@BleedBottomMargin}			% bottom bleed margin
\newlength{\@BleedTopMargin}			% top margin bleed margin

% page size
\newlength{\@PageWidth}					% page width without bleed margins (when paper is trimmed)
\newlength{\@PageHeight}				% page height without bleed margins (when paper is trimmed)

% safe content area margins
\newlength{\@SafeContentInnerMargin}	% inner margin of safe content area
\newlength{\@SafeContentOuterMargin}	% outer margin of safe content area
\newlength{\@SafeContentBottomMargin}	% bottom margin of safe content area
\newlength{\@SafeContentTopMargin}		% top margin of safe content area
\newlength{\@SafeContentWidth}			% width of the content body
\newlength{\@SafeContentHeight}			% height of the content body

% content area margin
\newlength{\@ContentTopMargin}			% top margin from the content body
\newlength{\@ContentOuterMargin}		% outer margin from the content body
\newlength{\@ContentBottomMargin}		% bottom margin from the content body
\newlength{\@ContentInnerMargin}		% inner margin from the content body
\newlength{\@ContentBindingOffset}		% additionnal inner margin for the binding
\newlength{\@ContentWidth}				% width of the content body
\newlength{\@ContentHeight}				% height of the content body

%% set default parameters
\setlength{\marginparwidth}{0mm}		% no notes
\setlength{\marginparsep}{0mm}			% no notes
\setlength{\headheight}{12pt}			% increase headheight (default to 12pt)
\setlength{\headsep}{18pt}				
\setlength{\footskip}{48pt}	

% get content margins relative to safe area borders
\setlength{\@ContentTopMargin}{\opt@top}
\setlength{\@ContentOuterMargin}{\opt@outer}
\setlength{\@ContentBottomMargin}{\opt@bottom}
\setlength{\@ContentInnerMargin}{\opt@inner}
\setlength{\@ContentBindingOffset}{\opt@binding}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PAGE LAYOUT / GEOMETRY
%%
%%%%%

\DeclareRobustCommand{\@SetBleedMargins}[4]{
	%
	% [#1] : set length of bleed top margin
	% [#2] : set length of bleed outer margin
	% [#3] : set length of bleed bottom margin
	% [#4] : set length of bleed inner margin
	%
	% \SetBleedMargins{top}{right/outer}{bottom}{left/inner}
	%
	\setlength{\@BleedTopMargin}{#1}
	\setlength{\@BleedOuterMargin}{#2}
	\setlength{\@BleedBottomMargin}{#3}
	\setlength{\@BleedInnerMargin}{#4}
}

\DeclareRobustCommand{\@SetSafeContentMargins}[4]{
	%
	% [#1] : set length of safe content top margin
	% [#2] : set length of safe content outer margin
	% [#3] : set length of safe content bottom margin
	% [#4] : set length of safe content inner margin
	%
	% \SetSafeContentMargins{top}{right/outer}{bottom}{left/inner}
	%
	\setlength{\@SafeContentTopMargin}{#1}
	\setlength{\@SafeContentOuterMargin}{#2}
	\setlength{\@SafeContentBottomMargin}{#3}
	\setlength{\@SafeContentInnerMargin}{#4}
}

\DeclareRobustCommand{\@SetContentMargins}[5]{
	%
	% [#1] : set length of current content top margin
	% [#2] : set length of current content outer margin
	% [#3] : set length of current content bottom margin
	% [#4] : set length of current content inner margin
	% [#5] : set length of current content binding margin
	%
	% \SetContentMargins{top}{right/outer}{bottom}{left/inner}{binding}
	%
	\setlength{\@ContentTopMargin}{#1}
	\setlength{\@ContentOuterMargin}{#2}
	\setlength{\@ContentBottomMargin}{#3}
	\setlength{\@ContentInnerMargin}{#4}
	\setlength{\@ContentBindingOffset}{#5}
}

\DeclareRobustCommand{\@AddContentMargins}[5]{
	%
	% [#1] : addlength to current content top margin
	% [#2] : addlength to current content outer margin
	% [#3] : addlength to current content bottom margin
	% [#4] : addlength to current content inner margin
	% [#5] : addlength to current content binding margin
	%
	% \AddContentMargins{top}{right/outer}{bottom}{left/inner}{binding}
	%
	\setlength{\@ContentTopMargin}{\@ContentTopMargin + #1}
	\setlength{\@ContentOuterMargin}{\@ContentOuterMargin + #2}
	\setlength{\@ContentBottomMargin}{\@ContentBottomMargin + #3}
	\setlength{\@ContentInnerMargin}{\@ContentInnerMargin + #4}
	\setlength{\@ContentBindingOffset}{\@ContentBindingOffset + #5}
}

\DeclareRobustCommand{\@SetGenericPageLayout}[2]{
	%
	% [#1] : final paper width (PDF export)
	% [#2] : final paper height (PDF export)
	%
	% \SetGenericPageLayout{width}{height}
	%

	% paper size
	\setlength{\@PaperWidth}{#1}
	\setlength{\@PaperHeight}{#2}

	% page safe content margins
	\@SetSafeContentMargins{5mm}{5mm}{5mm}{0mm}

	% page bleed margins
	\@SetBleedMargins{0mm}{0mm}{0mm}{0mm}

	% page size
	\setlength{\@PageWidth}{\@PaperWidth-\@BleedInnerMargin-\@BleedOuterMargin}
	\setlength{\@PageHeight}{\@PaperHeight-\@BleedTopMargin-\@BleedBottomMargin}

	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{0mm}{\@SafeContentInnerMargin}

	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@ContentBindingOffset - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}
	
	% current page layout
	\geometry{
		paperwidth=\@PaperWidth,
		paperheight=\@PaperHeight,
		inner=\@ContentInnerMargin+\@BleedInnerMargin,
		outer=\@ContentOuterMargin+\@BleedOuterMargin, 
		bottom=\@ContentBottomMargin+\@BleedBottomMargin,
		top=\@ContentTopMargin+\@BleedTopMargin,
		bindingoffset=\@ContentBindingOffset,
		includeall
		}
}

\DeclareRobustCommand{\@SetBlurbPageLayout}[5]{
	%
	% [#1] : blurb final paper width (PDF export)
	% [#2] : blurb final paper height (PDF export)
	% [#3] : blurb bleed (Top, Bottom, Outside Edge)
	% [#4] : blurb inset for margins / safe boundary (Top, Bottom, Outside Edge)
	% [#5] : blurb inset for margins / safe boundary (Inner or Binding Edge)
	%
	% \SetBlurbPageLayout{finalwidth}{finalheight}{bleed}{margin}{binding}
	%
	\newlength{\@BlurbPageWidth}
	\newlength{\@BlurbPageHeight}
	\newlength{\@BlurbBleed}
	\newlength{\@BlurbMargin}
	\newlength{\@BlurbBinding}

	\setlength{\@BlurbPageWidth}{#1}     % page width
	\setlength{\@BlurbPageHeight}{#2}    % page height
	\setlength{\@BlurbBleed}{#3}         % bleed (top, bottom and outside edges)
	\setlength{\@BlurbMargin}{#4}        % inset for margins / safe boundary (top, bottom, outside edges)
	\setlength{\@BlurbBinding}{#5}       % inset for margins / safe boundary (binding edge)

	% page size
	\setlength{\@PageWidth}{\@BlurbPageWidth}
	\setlength{\@PageHeight}{\@BlurbPageHeight}

	% page bleed margins
	\@SetBleedMargins{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}{0mm}
	
	% paper size
	\setlength{\@PaperWidth}{\@PageWidth + \@BleedInnerMargin + \@BleedOuterMargin}
	\setlength{\@PaperHeight}{\@PageHeight + \@BleedBottomMargin + \@BleedTopMargin}

	% safe content margins
	\@SetSafeContentMargins{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin}{\@BlurbBleed+\@BlurbBinding}
	
	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{\@BlurbBleed+\@ContentBindingOffset}{0mm}

	% binding offset
	\setlength{\@ContentBindingOffset}{\@BlurbBinding}
	
	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@ContentBindingOffset - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}

	% if nobleed nullify bleed margins to compute paper
	\ifbool{opt@nobleed}{
		\geometry{
			paperwidth=\@PaperWidth-\@BleedInnerMargin-\@BleedOuterMargin,
			paperheight=\@PaperHeight-\@BleedTopMargin-\@BleedBottomMargin,
			inner=\@ContentInnerMargin,
			outer=\@ContentOuterMargin, 
			bottom=\@ContentBottomMargin,
			top=\@ContentTopMargin,
			bindingoffset=\@ContentBindingOffset,
			% includeall
			}
	}{
		\geometry{
			paperwidth=\@PaperWidth,
			paperheight=\@PaperHeight,
			inner=\@ContentInnerMargin+\@BleedInnerMargin,
			outer=\@ContentOuterMargin+\@BleedOuterMargin, 
			bottom=\@ContentBottomMargin+\@BleedBottomMargin,
			top=\@ContentTopMargin+\@BleedTopMargin,
			bindingoffset=\@ContentBindingOffset,
			% includeall
			}
	}	
}


\DeclareRobustCommand{\GetPageLayoutNodes}{
	\begin{tikzpicture}[remember picture, overlay,inner sep=0pt]
		\ifthenelse{\isodd{\value{page}}} 
		{% right page
			\ifbool{opt@nobleed}{
				% page coords (PG) (after trim bleed)
				\coordinate (PGtl) at (current page.north west);
				\coordinate (PGtr) at (current page.north east);
				\coordinate (PGbr) at (current page.south east);
				\coordinate (PGbl) at (current page.south west);
				% paper coords (PP)
				\coordinate[xshift=-\@BleedInnerMargin, yshift=\@BleedTopMargin] (PPtl) at (PGtl);
				\coordinate[xshift=\@BleedOuterMargin, yshift=\@BleedTopMargin] (PPtr) at (PGtr);
				\coordinate[xshift=\@BleedOuterMargin, yshift=-\@BleedBottomMargin] (PPbr) at (PGbr);
				\coordinate[xshift=-\@BleedInnerMargin, yshift=-\@BleedBottomMargin] (PPbl) at (PGbl);
			}{
				% paper coords (PP)
				\coordinate (PPtl) at (current page.north west);
				\coordinate (PPtr) at (current page.north east);
				\coordinate (PPbr) at (current page.south east);
				\coordinate (PPbl) at (current page.south west);
				% page coords (PG after trim bleed)
				\coordinate[xshift=\@BleedInnerMargin, yshift=-\@BleedTopMargin] (PGtl) at (PPtl);
				\coordinate[xshift=-\@BleedOuterMargin, yshift=-\@BleedTopMargin] (PGtr) at (PPtr);
				\coordinate[xshift=-\@BleedOuterMargin, yshift=\@BleedBottomMargin] (PGbr) at (PPbr);
				\coordinate[xshift=\@BleedInnerMargin, yshift=\@BleedBottomMargin] (PGbl) at (PPbl);	
			}
			% safe content (SC)
			\coordinate[xshift=\@SafeContentInnerMargin, yshift=-\@SafeContentTopMargin] (SCtl) at (PGtl);
			\coordinate[xshift=-\@SafeContentOuterMargin, yshift=-\@SafeContentTopMargin] (SCtr) at (PGtr);
			\coordinate[xshift=-\@SafeContentOuterMargin, yshift=\@SafeContentBottomMargin] (SCbr) at (PGbr);
			\coordinate[xshift=\@SafeContentInnerMargin, yshift=\@SafeContentBottomMargin] (SCbl) at (PGbl);	
			% content area (CA)
			\coordinate[xshift=\@ContentInnerMargin+\@ContentBindingOffset, yshift=-\@ContentTopMargin] (CAtl) at (PGtl);
			\coordinate[xshift=-\@ContentOuterMargin, yshift=-\@ContentTopMargin] (CAtr) at (PGtr);
			\coordinate[xshift=-\@ContentOuterMargin, yshift=\@ContentBottomMargin] (CAbr) at (PGbr);
			\coordinate[xshift=\@ContentInnerMargin+\@ContentBindingOffset, yshift=\@ContentBottomMargin] (CAbl) at (PGbl);	
			% binding line (BL)
			\coordinate[xshift=\@ContentBindingOffset] (BLt) at (PGtl);
			\coordinate[xshift=\@ContentBindingOffset] (BLb) at (PGbl);
		}{% left page
			\ifbool{opt@nobleed}{
				% page coords (PG) (after trim bleed)
				\coordinate (PGtl) at (current page.north west);
				\coordinate (PGtr) at (current page.north east);
				\coordinate (PGbr) at (current page.south east);
				\coordinate (PGbl) at (current page.south west);
				% paper coords (PP)
				\coordinate[xshift=-\@BleedOuterMargin, yshift=\@BleedTopMargin] (PPtl) at (PGtl);
				\coordinate[xshift=\@BleedInnerMargin, yshift=\@BleedTopMargin] (PPtr) at (PGtr);
				\coordinate[xshift=\@BleedInnerMargin, yshift=-\@BleedBottomMargin] (PPbr) at (PGbr);
				\coordinate[xshift=-\@BleedOuterMargin, yshift=-\@BleedBottomMargin] (PPbl) at (PGbl);
			}{
				% paper coords (PP)
				\coordinate (PPtl) at (current page.north west);
				\coordinate (PPtr) at (current page.north east);
				\coordinate (PPbr) at (current page.south east);
				\coordinate (PPbl) at (current page.south west);
				% page coords (PG after trim bleed)
				\coordinate[xshift=\@BleedOuterMargin, yshift=-\@BleedTopMargin] (PGtl) at (PPtl);
				\coordinate[xshift=-\@BleedInnerMargin, yshift=-\@BleedTopMargin] (PGtr) at (PPtr);
				\coordinate[xshift=-\@BleedInnerMargin, yshift=\@BleedBottomMargin] (PGbr) at (PPbr);
				\coordinate[xshift=\@BleedOuterMargin, yshift=\@BleedBottomMargin] (PGbl) at (PPbl);	
			}
			% safe content (SC)
			\coordinate[xshift=\@SafeContentOuterMargin, yshift=-\@SafeContentTopMargin] (SCtl) at (PGtl);
			\coordinate[xshift=-\@SafeContentInnerMargin, yshift=-\@SafeContentTopMargin] (SCtr) at (PGtr);
			\coordinate[xshift=-\@SafeContentInnerMargin, yshift=\@SafeContentBottomMargin] (SCbr) at (PGbr);
			\coordinate[xshift=\@SafeContentOuterMargin, yshift=\@SafeContentBottomMargin] (SCbl) at (PGbl);
			% content area (CA)
			\coordinate[xshift=\@ContentOuterMargin, yshift=-\@ContentTopMargin] (CAtl) at (PGtl);
			\coordinate[xshift=-\@ContentInnerMargin-\@ContentBindingOffset, yshift=-\@ContentTopMargin] (CAtr) at (PGtr);
			\coordinate[xshift=-\@ContentInnerMargin-\@ContentBindingOffset, yshift=\@ContentBottomMargin] (CAbr) at (PGbr);
			\coordinate[xshift=\@ContentOuterMargin, yshift=\@ContentBottomMargin] (CAbl) at (PGbl);
			% binding line (BL)
			\coordinate[xshift=-\@ContentBindingOffset] (BLt) at (PGtr);
			\coordinate[xshift=-\@ContentBindingOffset] (BLb) at (PGbr);	
		}
		% center nodes
		\path (PPbl) -- (PPtr) coordinate[midway] (PPc);
		\path (PGbl) -- (PGtr) coordinate[midway] (PGc);
		\path (SCbl) -- (SCtr) coordinate[midway] (SCc);
		\path (CAbl) -- (CAtr) coordinate[midway] (CAc);
		% 
		\path (PGbl) -- (PGbr) coordinate[midway] (PGb);
		\path (PGtl) -- (PGtr) coordinate[midway] (PGt);
		\path (PGtl) -- (PGbl) coordinate[midway] (PGl);
		\path (PGtr) -- (PGbr) coordinate[midway] (PGr);
		%
		% mid nodes
		\path (CAtl) -- (CAtr) coordinate[midway] (CAt);
		\path (CAbl) -- (CAbr) coordinate[midway] (CAb);
		\path (CAtl) -- (CAbl) coordinate[midway] (CAl);
		\path (CAtr) -- (CAbr) coordinate[midway] (CAr);
	\end{tikzpicture}
}

\DeclareRobustCommand{\@ShowPageLayoutRules}{
	%
	% Display the page layout rules (bleed, margins, content area, binding, ...)
	% on the page
	%
	\AddToShipoutPictureBG{%
		% place the page layout nodes in the shipout BG register
		% so they will ba accessible in \AddToShipoutPictureBG
		\GetPageLayoutNodes
		% full content
		\ifbool{opt@showrules}{
			\begin{tikzpicture}[remember picture, overlay,inner sep=0pt]
				\path[fill=gray!20,fill opacity=0.4]  (CAbl) rectangle (CAtr);
			\end{tikzpicture}
		}{}
	}
	\AddToShipoutPictureFG{
		% place the page layout nodes in the shipout FG register
		% so they will ba accessible in \AddToShipoutPictureFG
		\GetPageLayoutNodes
		\begin{tikzpicture}[remember picture, overlay,inner sep=0pt]
			\ifbool{opt@showbleed}{}{
				\ifthenelse{\isodd{\value{page}}}
				{\path[fill,gray,opacity=0.9] (PPtl) -- (PPtr) -- (PPbr) -- (PPbl) -- (PGbl) -- (PGbr) -- (PGtr) -- (PGtl) -- (PPtl);}
				{\path[fill,gray,opacity=0.9] (PPtr) -- (PPtl) -- (PPbl) -- (PPbr) -- (PGbr) -- (PGbl) -- (PGtl) -- (PGtr) -- (PPtr);}
			}
			\ifbool{opt@showrules}{
				% paper frame
				\draw [red,thick] (PPbl) rectangle (PPtr);
				% page frame
				\draw [green,thick] (PGbl) rectangle (PGtr);
				% safe content
				\draw [color=blue,thick]  (SCbl) rectangle (SCtr);
				% full content
				% \draw [color=cyan,thick]  (CAbl) rectangle (CAtr);
				% binding line
				\draw[black,thick,dashed] (BLb) -- (BLt);
				% paper nodes
				% \filldraw[yellow] (PPbl) circle [radius=0.5mm];
				% \filldraw[yellow] (PPbr) circle [radius=0.5mm];
				% \filldraw[yellow] (PPtl) circle [radius=0.5mm];
				% \filldraw[yellow] (PPtr) circle [radius=0.5mm];
			}{}
			\ifbool{opt@showcanon}{
				\draw [color=cyan,thick]  (CAbl) rectangle (CAtr);
				% \draw[black,thick,dashed] (BLb) -- (BLt);
				% % \filldraw[yellow] (PGc) circle [radius=2mm];
				% % \filldraw[yellow] (PGt) circle [radius=2mm];
				% % \filldraw[yellow] (PGb) circle [radius=2mm];
				% % \filldraw[yellow] (PGr) circle [radius=2mm];
				% % \filldraw[yellow] (PGl) circle [radius=2mm];
				\ifthenelse{\isodd{\value{page}}}%
				{
					\draw[red,thin,dashed] (PGtl) -- (PGbr);
					\draw[red,thin,dashed] (PGl) -- (PGtr);
				}{
					\draw[red,thin,dashed] (PGbl) -- (PGtr);
					\draw[red,thin,dashed] (PGtl) -- (PGr);
				}
			}{}
		\end{tikzpicture}
	}
}

\DeclareRobustCommand{\@SetBlurbCoverLayout}[5]{
	%
	% [#1] : blurb final paper width (PDF export)
	% [#2] : blurb final paper height (PDF export)
	% [#3] : blurb bleed (all Edges)
	% [#4] : blurb gutter width
	% [#5] : blurb inset for margins / safe boundary (Top, Bottom, Outside Edge)
	%
	% \SetBlurbCoverLayout{finalwidth}{finalheight}{bleed}{margin}{binding}
	%
	\newlength{\@BlurbPageWidth}
	\newlength{\@BlurbPageHeight}
	\newlength{\@BlurbBleed}
	\newlength{\@BlurbMargin}
	\newlength{\@BlurbGutterWidth}

	\setlength{\@BlurbPageWidth}{#1}     % page width
	\setlength{\@BlurbPageHeight}{#2}    % page height
	\setlength{\@BlurbBleed}{#3}         % bleed (top, bottom and outside edges)
	\setlength{\@BlurbGutterWidth}{#4}   % inset for margins / safe boundary (top, bottom, outside edges)
	\setlength{\@BlurbMargin}{#5}        % inset for margins / safe boundary (top, bottom, outside edges)

	% page size
	\setlength{\@PageWidth}{2\@BlurbPageWidth+\@BlurbGutterWidth}
	\setlength{\@PageHeight}{\@BlurbPageHeight}

	% page bleed margins
	\@SetBleedMargins{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}

	% paper size
	\setlength{\@PaperWidth}{\@PageWidth + \@BleedInnerMargin + \@BleedOuterMargin}
	\setlength{\@PaperHeight}{\@PageHeight + \@BleedBottomMargin + \@BleedTopMargin}

	% safe content margins
	\@SetSafeContentMargins{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin+\@BlurbGutterWidth/2}
	
	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{\@SafeContentInnerMargin}{0mm}
	
	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@BlurbGutterWidth - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}

	\geometry{
			paperwidth=\@PaperWidth,
			paperheight=\@PaperHeight,
			inner=\@ContentInnerMargin+\@BleedInnerMargin,
			outer=\@ContentOuterMargin+\@BleedOuterMargin, 
			bottom=\@ContentBottomMargin+\@BleedBottomMargin,
			top=\@ContentTopMargin+\@BleedTopMargin,
			bindingoffset=0mm,
			includeall
			}
}

\DeclareRobustCommand{\@ShowCoverLayoutRules}{
	%
	% Display the cover layout rules (bleed, margins, content area, binding, ...)
	% on the page
	%
	\AddEverypageHook{
		\backgroundsetup{scale=1.0,angle=0,opacity=1.0,position=current page.center,
			contents={
			\begin{tikzpicture}
				% bleed frame
				\draw [color=red,fill=lightgray,thick] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop frame
				\draw [color=green,fill=white,thick] 
				(\@BleedOuterMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedInnerMargin,\@PaperHeight-\@BleedTopMargin);
				% safe content frame
				\draw [color=blue,thick] 
				(\@BleedOuterMargin+\@SafeContentOuterMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth/2-\@SafeContentInnerMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				\draw [color=blue,thick] 
				(\@PaperWidth/2+\@SafeContentInnerMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth-\@BleedOuterMargin-\@SafeContentOuterMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% (\@PaperWidth/2+\@BlurbGutterWidth/2+\@SafeContentInnerMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth/2-\@BlurbGutterWidth/2-\@SafeContentInnerMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% spline
				\draw[black,thick,dashed] (\@PaperWidth/2-\@BlurbGutterWidth/2,0) -- (\@PaperWidth/2-\@BlurbGutterWidth/2,\@PaperHeight);
				\draw[black,thick,dashed] (\@PaperWidth/2+\@BlurbGutterWidth/2,0) -- (\@PaperWidth/2+\@BlurbGutterWidth/2,\@PaperHeight);
				% text frame
				% \draw [color=cyan,fill=gray!20,fill opacity=0.2, thick] 
				% (\@BleedOuterMargin+\@ContentOuterMargin, \@BleedBottomMargin+\@ContentBottomMargin) rectangle (\@BleedOuterMargin+\@ContentOuterMargin+\@ContentWidth,\@BleedBottomMargin+\@ContentBottomMargin+\@ContentHeight);
			\end{tikzpicture}
		}}
		\BgMaterial
	}
}

% Build the layout from package options
\ifdefempty{\opt@booksize}{
	\@SetGenericPageLayout{210mm}{297mm}
}{
	\ifdefstring{\opt@cover}{no}{
		% Generic Book Size
		\ifdefstring{\opt@booksize}{a4}{
			\@SetGenericPageLayout{210mm}{297mm}
		}{}
		% Blurb Book Size
		\ifdefstring{\opt@booksize}{TB_5x8}{ %Trade Book 5x8 inches
			\@SetBlurbPageLayout{12.700cm}{20.321cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\ifdefstring{\opt@booksize}{TB_6x9}{ % Trade Book 6x9 inches
			\@SetBlurbPageLayout{15.240cm}{22.861cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\ifdefstring{\opt@booksize}{TB_8x10}{ % Trade Book 8x10 inches
			\@SetBlurbPageLayout{20.320cm}{25.401cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\@ShowPageLayoutRules{}
		\ifdefstring{\opt@pagemodulo}{2}{\AtEndDocument{\@PageCountMultipleOfTwo}}{}
		\ifdefstring{\opt@pagemodulo}{4}{\AtEndDocument{\@PageCountMultipleOfFour}}{}
	}{
		% BLurb Cover Size
		\ifdefstring{\opt@booksize}{TB_8x10}{ % Trade Book 8x10 inches
			\@SetBlurbCoverLayout{20.320cm}{25.401cm}{0.776cm}{\opt@gutter}{0.635cm}
		}{}
		\ifbool{opt@showrules}{\@ShowCoverLayoutRules{}}{}
	}
}

\ifbool{opt@showframe}{\geometry{showframe}}{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% BOOK TOTAL PAGE COUNT
%%
%% Add blank pages to the end of the book so that the total number of pages 
%% is a multiple of 2 or 4 (print constraint).
%%
%% help : https://tex.stackexchange.com/a/83498
%% help : tikz overlay create blank space 
%% https://tex.stackexchange.com/q/22873/154815
%%%%%

\patchcmd\mainmatter{\cleardoublepage}{%
	\clearpage\edef\@currentlabel{\number\numexpr\arabic{page}\ifodd\arabic{page}+1\fi\relax}%
	\label{LastFrontmatterPage}%
	\cleardoublepage
}{}{}

\ExplSyntaxOn
\cs_new:Npn \egreg_int_coremainder:nn #1 #2{%
  \int_mod:nn { #2 - \int_mod:nn { #1 } { #2 } } { #2 }
}
\NewDocumentCommand{\@PageCountMultipleOfFour} { O{0} }{%
	\prg_replicate:nn
	{
		\egreg_int_coremainder:nn { #1 + \getrefnumber{LastFrontmatterPage} + \getpagerefnumber{LastPage} } { 4 }
	}
	{ \thispagestyle{empty}\null\clearpage }
}
\NewDocumentCommand{\@PageCountMultipleOfTwo} { O{0} }{%
	\prg_replicate:nn
	{
		\egreg_int_coremainder:nn { #1 + \getrefnumber{LastFrontmatterPage} + \getpagerefnumber{LastPage} } { 2 }
	}
	{ \thispagestyle{empty}\null\clearpage }
}
\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PAGE LAYOUT
%%
%%%%%

\renewcommand{\cleardoublepage}{%
	\clearpage
	\if@twoside 
		\ifodd\c@page
		\else
			\hbox{}
			\thispagestyle{empty}
			\newpage
			\if@twocolumn
				\hbox{}\newpage
			\fi
		\fi
	\fi
}

\newcommand*{\cleartoleftpage}{%	
	\clearpage
	\if@twoside
		\ifodd\c@page
			\hbox{}\newpage
			\if@twocolumn
				\hbox{}\newpage
			\fi
		\fi
	\fi
}

\newcommand{\blankpage}[1]{%
	\afterpage{#1\clearpage}
}

\newcommand{\rightblankpage}[1]{%
	\ifodd\value{page}
		\expandafter\afterpage%
	\else
	\fi
	{\blankpage{#1}}
}

\newcommand{\leftblankpage}[1]{%
	\ifodd\value{page}
	\else
		\expandafter\afterpage%
	\fi
	{\blankpage{#1}}
}

\newcommand{\doubleblankpage}[3][l]{
	%
	% [#1] : (optional) r | l (first page starts on a left or right page)
	% [#2] : code for the first blank page
	% [#3] : code for the second blank page
	
	%
	\if#1r  % start on a right page
		\rightblankpage{
			#2
			\leftblankpage{#3}
		}
	\else	% start on a left page
		\leftblankpage{
			#2
			\rightblankpage{#3}
		}	
	\fi
}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% LOCAL MODIFICATION OF PAGE MARGINS
%%
%%%%%

\newlength\save@textwidth
\newlength\save@hsize
\newlength\save@oddsidemargin
\newlength\save@evensidemargin
\newcommand{\addtomargin}[2][l]{%
	% textwidth : \the\textwidth\\
	% hsize : \the\hsize\\
	% oddsidemargin : \the\oddsidemargin\\
	% evensidemargin : \the\evensidemargin\\
	% backup actual page geometry
	\setlength{\save@textwidth}{\textwidth}
	\setlength{\save@hsize}{\hsize}
	\setlength{\save@oddsidemargin}{\oddsidemargin}
	\setlength{\save@evensidemargin}{\evensidemargin}
	% change actual page geometry
	\if#1l		
		\setlength{\hsize}{\save@hsize-#2}
		\setlength{\headwidth}{\hsize}
		\setlength{\hsize}{\save@hsize-#2}
		\setlength{\textwidth}{\save@textwidth-#2}
		\setlength{\oddsidemargin}{\save@oddsidemargin+#2}
	\else
		\setlength{\hsize}{\save@hsize-#2}
		\setlength{\headwidth}{\hsize}
		\setlength{\hsize}{\save@hsize-#2}
		\setlength{\textwidth}{\save@textwidth-#2}
		\setlength{\evensidemargin}{\save@evensidemargin+#2}
	\fi
}
\newcommand{\restoremargin}{%
	\global\textwidth=\save@textwidth
	\global\hsize=\save@hsize
	\global\headwidth=\save@hsize
	\global\oddsidemargin=\save@oddsidemargin
	\global\evensidemargin=\save@evensidemargin
}

\newlength\save@textheight
\newcommand{\addtotextheigth}[1]{
	\setlength{\save@textheight}{\textheight}
	\setlength{\textheight}{\save@textheight+#1}
}
\newcommand{\restoretexteheight}{%
	\global\textheight=\save@textheight
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% TIKZ NODE OPERATIONS 
%%
%%%%%

\newcommand{\savenode}[2]{
	%
	% save the coordinates of a temporary tikz node/coord 
	% in another register
	%
	% [#1] : temporary node to save
	% [#2] : new register name to store the coords
	%
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\coordinate (#2) at (#1);
	\end{tikzpicture}
}

\newcommand{\savenodes}[1]{
	%
	% persiste all current coords of interest in temporary registers
	% of the form #1xx where xx = tl (top-left), br (bottom rigth), b (bottom), ...
	%
	% [#1] : prefix of registers
	%
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\coordinate (#1tl) at (TL);
		\coordinate (#1tr) at (TR);
		\coordinate (#1bl) at (BL);
		\coordinate (#1br) at (BR);
		\coordinate (#1t) at (T);
		\coordinate (#1b) at (B);
		\coordinate (#1l) at (L);
		\coordinate (#1r) at (R);
	\end{tikzpicture}
}

\newcommand{\calcnode}[2]{
	%
	% helping macro to store the result of a tikz calc expression in a coords register
	% example : \calcnode{(BR)+(20mm,-20mm)}{TMPNode}
	%
	% [#1] : tikz calc expression without $...$
	% [#2] : name of register to store the resulting coordinates
	%
	\def\calctoken{\coordinate (#2) at ($ #1 $);}
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\calctoken
	\end{tikzpicture}
}

\newcommand{\intersectnode}[2]{
	%
	% helping macro to store the result of a tikz intersection in a coords register
	% example : \intersectnode{BR -| TL}{TMPNode}
	%
	% [#1] : tikz intersect expression
	% [#2] : name of register to store the resulting node
	%
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\path (#1) node (#2){};
	\end{tikzpicture}
}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% MAKE FIELDS PUBLICLY AVAILABLE
%%
%%%%%

\let\PaperWidth\@PaperWidth
\let\PaperHeight\@PaperHeight

\let\PageWidth\@PageWidth
\let\PageHeight\@PageHeight

\let\BleedInnerMargin\@BleedInnerMargin
\let\BleedOuterMargin\@BleedOuterMargin
\let\BleedTopMargin\@BleedTopMargin
\let\BleedBottomMargin\@BleedBottomMargin

\let\SafeContentInnerMargin\@SafeContentInnerMargin
\let\SafeContentOuterMargin\@SafeContentOuterMargin
\let\SafeContentTopMargin\@SafeContentTopMargin
\let\SafeContentBottomMargin\@SafeContentBottomMargin

\let\ContentInnerMargin\@ContentInnerMargin
\let\ContentOuterMargin\@ContentOuterMargin
\let\ContentTopMargin\@ContentTopMargin
\let\contentBottomMargin\@ContentBottomMargin
\let\ContentBindingOffset\@ContentBindingOffset
