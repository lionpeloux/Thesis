
% Lionel du Peloux (2018)
% https://fr.sharelatex.com/learn/Writing_your_own_class#Preliminary_declarations



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% IDENTIFICATION
%%
%%%%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{blurb}[2017/12/20 Lionel du Peloux]





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PRELIMINARY DECLARATIONS
%%
%%%%%

\RequirePackage{kvoptions}  		% key-value options for package
\RequirePackage{xkeyval}  			% key-value options for macros
\RequirePackage{etoolbox}
\RequirePackage{ifthen}
\RequirePackage{calc}
\RequirePackage{xparse}
\RequirePackage{xargs}				% commands with optional arguments
\RequirePackage{refcount}
\RequirePackage{lastpage}
\RequirePackage{geometry}			% page layout
\RequirePackage{background}			% add bakground material
\RequirePackage{xcolor}
\RequirePackage{tikz}
\RequirePackage{tikzpagenodes}
\RequirePackage{rotating}
\RequirePackage{adjustbox}
\RequirePackage[absolute,overlay,
	showboxes,
	]{textpos}
\backgroundsetup{contents={}}
% \usetikzlibrary{external,positioning}
\usetikzlibrary{calc,backgrounds,positioning}
\RequirePackage[]{graphicx}
\RequirePackage{afterpage}
\RequirePackage[strict]{changepage}
% \RequirePackage[
% 	% showboxes,
% 	absolute,overlay]{textpos} % absolute positionning
% textpos value
% \setlength{\TPHorizModule}{1mm}
% \setlength{\TPVertModule}{1mm}





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% DECLARE OPTIONS
%%
%%%%%

\SetupKeyvalOptions{family=blurb,prefix=opt@} 
\DeclareStringOption[]{booksize}[TB_8x10]
\DeclareStringOption[0mm]{top}[0mm]
\DeclareStringOption[0mm]{outer}[0mm]
\DeclareStringOption[0mm]{bottom}[0mm]
\DeclareStringOption[0mm]{inner}[0mm]
\DeclareStringOption[0mm]{binding}[0mm]
\DeclareStringOption[2]{pagemodulo}[2]
\DeclareStringOption[no]{cover}[hard]
\DeclareStringOption[20mm]{gutter}[20mm]
\DeclareBoolOption[false]{showrules}
\DeclareBoolOption[false]{showframe}
\ProcessKeyvalOptions*





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PARAMETER FIELDS
%%
%%%%%

% paper size
\newlength{\@PaperWidth}				% paper width 
\newlength{\@PaperHeight}				% paper height 

% bleed margins
\newlength{\@BleedInnerMargin}			% inner bleed margin
\newlength{\@BleedOuterMargin}			% outer bleed margin
\newlength{\@BleedBottomMargin}			% bottom bleed margin
\newlength{\@BleedTopMargin}			% top margin bleed margin

% page size
\newlength{\@PageWidth}					% page width without bleed margins (when paper is trimmed)
\newlength{\@PageHeight}				% page height without bleed margins (when paper is trimmed)

% safe content area margins
\newlength{\@SafeContentInnerMargin}	% inner margin of safe content area
\newlength{\@SafeContentOuterMargin}	% outer margin of safe content area
\newlength{\@SafeContentBottomMargin}	% bottom margin of safe content area
\newlength{\@SafeContentTopMargin}		% top margin of safe content area
\newlength{\@SafeContentWidth}			% width of the content body
\newlength{\@SafeContentHeight}			% height of the content body

% content area margin
\newlength{\@ContentTopMargin}			% top margin from the content body
\newlength{\@ContentOuterMargin}		% outer margin from the content body
\newlength{\@ContentBottomMargin}		% bottom margin from the content body
\newlength{\@ContentInnerMargin}		% inner margin from the content body
\newlength{\@ContentBindingOffset}		% additionnal inner margin for the binding
\newlength{\@ContentWidth}				% width of the content body
\newlength{\@ContentHeight}				% height of the content body

%% set default parameters
\setlength{\marginparwidth}{0mm}		% no notes
\setlength{\marginparsep}{0mm}			% no notes
\setlength{\headheight}{14pt}			% increase headheight (default to 12pt)
\setlength{\headsep}{25pt}				
\setlength{\footskip}{25pt}	

% get content margins relative to safe area borders
\setlength{\@ContentTopMargin}{\opt@top}
\setlength{\@ContentOuterMargin}{\opt@outer}
\setlength{\@ContentBottomMargin}{\opt@bottom}
\setlength{\@ContentInnerMargin}{\opt@inner}
\setlength{\@ContentBindingOffset}{\opt@binding}





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PAGE LAYOUT / GEOMETRY
%%
%%%%%

\DeclareRobustCommand{\@SetBleedMargins}[4]{
	%
	% [#1] : set length of bleed top margin
	% [#2] : set length of bleed outer margin
	% [#3] : set length of bleed bottom margin
	% [#4] : set length of bleed inner margin
	%
	% \SetBleedMargins{top}{right/outer}{bottom}{left/inner}
	%
	\setlength{\@BleedTopMargin}{#1}
	\setlength{\@BleedOuterMargin}{#2}
	\setlength{\@BleedBottomMargin}{#3}
	\setlength{\@BleedInnerMargin}{#4}
}

\DeclareRobustCommand{\@SetSafeContentMargins}[4]{
	%
	% [#1] : set length of safe content top margin
	% [#2] : set length of safe content outer margin
	% [#3] : set length of safe content bottom margin
	% [#4] : set length of safe content inner margin
	%
	% \SetSafeContentMargins{top}{right/outer}{bottom}{left/inner}
	%
	\setlength{\@SafeContentTopMargin}{#1}
	\setlength{\@SafeContentOuterMargin}{#2}
	\setlength{\@SafeContentBottomMargin}{#3}
	\setlength{\@SafeContentInnerMargin}{#4}
}

\DeclareRobustCommand{\@SetContentMargins}[5]{
	%
	% [#1] : set length of current content top margin
	% [#2] : set length of current content outer margin
	% [#3] : set length of current content bottom margin
	% [#4] : set length of current content inner margin
	% [#5] : set length of current content binding margin
	%
	% \SetContentMargins{top}{right/outer}{bottom}{left/inner}{binding}
	%
	\setlength{\@ContentTopMargin}{#1}
	\setlength{\@ContentOuterMargin}{#2}
	\setlength{\@ContentBottomMargin}{#3}
	\setlength{\@ContentInnerMargin}{#4}
	\setlength{\@ContentBindingOffset}{#5}
}

\DeclareRobustCommand{\@AddContentMargins}[5]{
	%
	% [#1] : addlength to current content top margin
	% [#2] : addlength to current content outer margin
	% [#3] : addlength to current content bottom margin
	% [#4] : addlength to current content inner margin
	% [#5] : addlength to current content binding margin
	%
	% \AddContentMargins{top}{right/outer}{bottom}{left/inner}{binding}
	%
	\setlength{\@ContentTopMargin}{\@ContentTopMargin + #1}
	\setlength{\@ContentOuterMargin}{\@ContentOuterMargin + #2}
	\setlength{\@ContentBottomMargin}{\@ContentBottomMargin + #3}
	\setlength{\@ContentInnerMargin}{\@ContentInnerMargin + #4}
	\setlength{\@ContentBindingOffset}{\@ContentBindingOffset + #5}
}

\DeclareRobustCommand{\@SetGenericPageLayout}[2]{
	%
	% [#1] : final paper width (PDF export)
	% [#2] : final paper height (PDF export)
	%
	% \SetGenericPageLayout{width}{height}
	%

	% paper size
	\setlength{\@PaperWidth}{#1}
	\setlength{\@PaperHeight}{#2}

	% page safe content margins
	\@SetSafeContentMargins{5mm}{5mm}{5mm}{0mm}

	% page bleed margins
	\@SetBleedMargins{0mm}{0mm}{0mm}{0mm}

	% page size
	\setlength{\@PageWidth}{\@PaperWidth-\@BleedInnerMargin-\@BleedOuterMargin}
	\setlength{\@PageHeight}{\@PaperHeight-\@BleedTopMargin-\@BleedBottomMargin}

	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{0mm}{\@SafeContentInnerMargin}

	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@ContentBindingOffset - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}
	
	% current page layout
	\geometry{
		paperwidth=\@PaperWidth,
		paperheight=\@PaperHeight,
		inner=\@ContentInnerMargin+\@BleedInnerMargin,
		outer=\@ContentOuterMargin+\@BleedOuterMargin, 
		bottom=\@ContentBottomMargin+\@BleedBottomMargin,
		top=\@ContentTopMargin+\@BleedTopMargin,
		bindingoffset=\@ContentBindingOffset,
		includeall
		}
}

\DeclareRobustCommand{\@SetBlurbPageLayout}[5]{
	%
	% [#1] : blurb final paper width (PDF export)
	% [#2] : blurb final paper height (PDF export)
	% [#3] : blurb bleed (Top, Bottom, Outside Edge)
	% [#4] : blurb inset for margins / safe boundary (Top, Bottom, Outside Edge)
	% [#5] : blurb inset for margins / safe boundary (Inner or Binding Edge)
	%
	% \SetBlurbPageLayout{finalwidth}{finalheight}{bleed}{margin}{binding}
	%
	\newlength{\@BlurbPageWidth}
	\newlength{\@BlurbPageHeight}
	\newlength{\@BlurbBleed}
	\newlength{\@BlurbMargin}
	\newlength{\@BlurbBinding}

	\setlength{\@BlurbPageWidth}{#1}     % page width
	\setlength{\@BlurbPageHeight}{#2}    % page height
	\setlength{\@BlurbBleed}{#3}         % bleed (top, bottom and outside edges)
	\setlength{\@BlurbMargin}{#4}        % inset for margins / safe boundary (top, bottom, outside edges)
	\setlength{\@BlurbBinding}{#5}       % inset for margins / safe boundary (binding edge)

	% page size
	\setlength{\@PageWidth}{\@BlurbPageWidth}
	\setlength{\@PageHeight}{\@BlurbPageHeight}

	% page bleed margins
	\@SetBleedMargins{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}{0mm}

	% paper size
	\setlength{\@PaperWidth}{\@PageWidth + \@BleedInnerMargin + \@BleedOuterMargin}
	\setlength{\@PaperHeight}{\@PageHeight + \@BleedBottomMargin + \@BleedTopMargin}

	% safe content margins
	\@SetSafeContentMargins{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin}{\@BlurbBleed+\@BlurbBinding}
	
	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{\@BlurbBleed+\@ContentBindingOffset}{0mm}

	% binding offset
	\setlength{\@ContentBindingOffset}{\@BlurbBinding}
	
	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@ContentBindingOffset - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}

	\geometry{
			paperwidth=\@PaperWidth,
			paperheight=\@PaperHeight,
			inner=\@ContentInnerMargin+\@BleedInnerMargin,
			outer=\@ContentOuterMargin+\@BleedOuterMargin, 
			bottom=\@ContentBottomMargin+\@BleedBottomMargin,
			top=\@ContentTopMargin+\@BleedTopMargin,
			bindingoffset=\@ContentBindingOffset,
			includeall
			}
}

\DeclareRobustCommand{\@ShowPageLayoutRules}{
	%
	% Display the page layout rules (bleed, margins, content area, binding, ...)
	% on the page
	%
	\AddEverypageHook{
		\ifthenelse{\isodd{\value{page}}}
		{\backgroundsetup{scale=1.0,angle=0,opacity=1.0,position=current page.center,
			contents={
			\begin{tikzpicture}
				% bleed area
				\fill [gray] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop area
				\fill [white] 
				(\@BleedInnerMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedOuterMargin,\@PaperHeight-\@BleedTopMargin);
				\ifbool{opt@showrules}{
				% bleed frame
				\draw [red,thick] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop frame
				\draw [green,thick] 
				(\@BleedInnerMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedOuterMargin,\@PaperHeight-\@BleedTopMargin);
				% safe content frame
				\draw [blue,thick] 
				(\@BleedInnerMargin+\@SafeContentInnerMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth-\@BleedOuterMargin-\@SafeContentOuterMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% binding edge
				\draw[black,thick,dashed] (\@BleedInnerMargin+\@ContentBindingOffset,0) -- (\@BleedInnerMargin+\@ContentBindingOffset,\@PaperHeight);
				% content frame
				\draw [color=cyan,fill=gray!20,fill opacity=0.2, thick] 
				(\@BleedInnerMargin+\@ContentBindingOffset+\@ContentInnerMargin, \@BleedBottomMargin+\@ContentBottomMargin) rectangle (\@ContentBindingOffset+\@ContentInnerMargin+\@ContentWidth,\@BleedBottomMargin+\@ContentBottomMargin+\@ContentHeight);
				}{}
			\end{tikzpicture}
		}}}
		{\backgroundsetup{scale=1.0,angle=0,opacity=1.0,position=current page.center,
			contents={
			\begin{tikzpicture}
				% bleed area
				\fill [gray] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop area
				\fill [white] 
				(\@BleedOuterMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedInnerMargin,\@PaperHeight-\@BleedTopMargin);			
				\ifbool{opt@showrules}{
				% bleed frame
				\draw [red,thick] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop frame
				\draw [green,thick] 
				(\@BleedOuterMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedInnerMargin,\@PaperHeight-\@BleedTopMargin);
				% safe content frame
				\draw [color=blue,thick] 
				(\@BleedOuterMargin+\@SafeContentOuterMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth-\@BleedInnerMargin-\@SafeContentInnerMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% binding edge
				\draw[black,thick,dashed] (\@PaperWidth-\@BleedInnerMargin-\@ContentBindingOffset,0) -- (\@PaperWidth-\@BleedInnerMargin-\@ContentBindingOffset,\@PaperHeight);
				% text frame
				\draw [color=cyan,fill=gray!20,fill opacity=0.2, thick] 
				(\@BleedOuterMargin+\@ContentOuterMargin, \@BleedBottomMargin+\@ContentBottomMargin) rectangle (\@BleedOuterMargin+\@ContentOuterMargin+\@ContentWidth,\@BleedBottomMargin+\@ContentBottomMargin+\@ContentHeight);
				}{}
			\end{tikzpicture}
		}}}
		\BgMaterial
	}
}

\DeclareRobustCommand{\@SetBlurbCoverLayout}[5]{
	%
	% [#1] : blurb final paper width (PDF export)
	% [#2] : blurb final paper height (PDF export)
	% [#3] : blurb bleed (all Edges)
	% [#4] : blurb gutter width
	% [#5] : blurb inset for margins / safe boundary (Top, Bottom, Outside Edge)
	%
	% \SetBlurbCoverLayout{finalwidth}{finalheight}{bleed}{margin}{binding}
	%
	\newlength{\@BlurbPageWidth}
	\newlength{\@BlurbPageHeight}
	\newlength{\@BlurbBleed}
	\newlength{\@BlurbMargin}
	\newlength{\@BlurbGutterWidth}

	\setlength{\@BlurbPageWidth}{#1}     % page width
	\setlength{\@BlurbPageHeight}{#2}    % page height
	\setlength{\@BlurbBleed}{#3}         % bleed (top, bottom and outside edges)
	\setlength{\@BlurbGutterWidth}{#4}   % inset for margins / safe boundary (top, bottom, outside edges)
	\setlength{\@BlurbMargin}{#5}        % inset for margins / safe boundary (top, bottom, outside edges)

	% page size
	\setlength{\@PageWidth}{2\@BlurbPageWidth+\@BlurbGutterWidth}
	\setlength{\@PageHeight}{\@BlurbPageHeight}

	% page bleed margins
	\@SetBleedMargins{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}{\@BlurbBleed}

	% paper size
	\setlength{\@PaperWidth}{\@PageWidth + \@BleedInnerMargin + \@BleedOuterMargin}
	\setlength{\@PaperHeight}{\@PageHeight + \@BleedBottomMargin + \@BleedTopMargin}

	% safe content margins
	\@SetSafeContentMargins{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin}{\@BlurbMargin+\@BlurbGutterWidth/2}
	
	% content margins (user-defined content margin + safe content margin)
	\@AddContentMargins{\@SafeContentTopMargin}{\@SafeContentOuterMargin}{\@SafeContentBottomMargin}{\@SafeContentInnerMargin}{0mm}
	
	% content size
	\setlength{\@ContentWidth}{\@PageWidth - \@BlurbGutterWidth - \@ContentInnerMargin - \@ContentOuterMargin}
	\setlength{\@ContentHeight}{\@PageHeight - \@ContentTopMargin - \@ContentBottomMargin}

	\geometry{
			paperwidth=\@PaperWidth,
			paperheight=\@PaperHeight,
			inner=\@ContentInnerMargin+\@BleedInnerMargin,
			outer=\@ContentOuterMargin+\@BleedOuterMargin, 
			bottom=\@ContentBottomMargin+\@BleedBottomMargin,
			top=\@ContentTopMargin+\@BleedTopMargin,
			bindingoffset=0mm,
			includeall
			}
}

\DeclareRobustCommand{\@ShowCoverLayoutRules}{
	%
	% Display the cover layout rules (bleed, margins, content area, binding, ...)
	% on the page
	%
	\AddEverypageHook{
		\backgroundsetup{scale=1.0,angle=0,opacity=1.0,position=current page.center,
			contents={
			\begin{tikzpicture}
				% bleed frame
				\draw [color=red,fill=lightgray,thick] 
				(0,0) rectangle (\@PaperWidth,\@PaperHeight);
				% crop frame
				\draw [color=green,fill=white,thick] 
				(\@BleedOuterMargin,\@BleedBottomMargin) rectangle (\@PaperWidth-\@BleedInnerMargin,\@PaperHeight-\@BleedTopMargin);
				% safe content frame
				\draw [color=blue,thick] 
				(\@BleedOuterMargin+\@SafeContentOuterMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth/2-\@SafeContentInnerMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				\draw [color=blue,thick] 
				(\@PaperWidth/2+\@SafeContentInnerMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth-\@BleedOuterMargin-\@SafeContentOuterMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% (\@PaperWidth/2+\@BlurbGutterWidth/2+\@SafeContentInnerMargin, \@BleedBottomMargin+\@SafeContentBottomMargin) rectangle (\@PaperWidth/2-\@BlurbGutterWidth/2-\@SafeContentInnerMargin, \@PaperHeight-\@BleedTopMargin-\@SafeContentTopMargin);
				% spline
				\draw[black,thick,dashed] (\@PaperWidth/2-\@BlurbGutterWidth/2,0) -- (\@PaperWidth/2-\@BlurbGutterWidth/2,\@PaperHeight);
				\draw[black,thick,dashed] (\@PaperWidth/2+\@BlurbGutterWidth/2,0) -- (\@PaperWidth/2+\@BlurbGutterWidth/2,\@PaperHeight);
				% text frame
				% \draw [color=cyan,fill=gray!20,fill opacity=0.2, thick] 
				% (\@BleedOuterMargin+\@ContentOuterMargin, \@BleedBottomMargin+\@ContentBottomMargin) rectangle (\@BleedOuterMargin+\@ContentOuterMargin+\@ContentWidth,\@BleedBottomMargin+\@ContentBottomMargin+\@ContentHeight);
			\end{tikzpicture}
		}}
		\BgMaterial
	}
}

% Build the layout from package options
\ifdefempty{\opt@booksize}{
	\@SetGenericPageLayout{210mm}{297mm}
}{
	\ifdefstring{\opt@cover}{no}{
		% Generic Book Size
		\ifdefstring{\opt@booksize}{a4}{
			\@SetGenericPageLayout{210mm}{297mm}
		}{}
		% Blurb Book Size
		\ifdefstring{\opt@booksize}{TB_5x8}{ %Trade Book 5x8 inches
			\@SetBlurbPageLayout{12.700cm}{20.321cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\ifdefstring{\opt@booksize}{TB_6x9}{ % Trade Book 6x9 inches
			\@SetBlurbPageLayout{15.240cm}{22.861cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\ifdefstring{\opt@booksize}{TB_8x10}{ % Trade Book 8x10 inches
			\@SetBlurbPageLayout{20.320cm}{25.401cm}{0.317cm}{0.635cm}{1.270cm}
		}{}
		\@ShowPageLayoutRules{}
		\ifdefstring{\opt@pagemodulo}{2}{\AtEndDocument{\@PageCountMultipleOfTwo}}{}
		\ifdefstring{\opt@pagemodulo}{4}{\AtEndDocument{\@PageCountMultipleOfFour}}{}
	}{
		\ifdefstring{\opt@booksize}{TB_8x10}{ % Trade Book 8x10 inches
			\@SetBlurbCoverLayout{20.320cm}{25.401cm}{0.776cm}{\opt@gutter}{0.635cm}
			% \@SetBlurbCoverLayout{20.320cm}{25.401cm}{0.317cm}{\opt@gutter}{0.635cm}
		}{}
		% \ifdefstring{\opt@cover}{hard}{

		% }{}
		% \ifdefstring{\opt@cover}{soft}{
		% }{}
		\ifbool{opt@showrules}{\@ShowCoverLayoutRules{}}{}
	}
}

\ifbool{opt@showframe}{\geometry{showframe}}{}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% BOOK TOTAL PAGE COUNT
%%
%% Add blank pages to the end of the book so that the total number of pages 
%% is a multiple of 2 or 4 (print constraint).
%%
%% help : https://tex.stackexchange.com/a/83498
%%
%%%%%

\patchcmd\mainmatter{\cleardoublepage}{%
	\clearpage\edef\@currentlabel{\number\numexpr\arabic{page}\ifodd\arabic{page}+1\fi\relax}%
	\label{LastFrontmatterPage}%
	\cleardoublepage
}{}{}

\ExplSyntaxOn
\cs_new:Npn \egreg_int_coremainder:nn #1 #2{%
  \int_mod:nn { #2 - \int_mod:nn { #1 } { #2 } } { #2 }
}
\NewDocumentCommand{\@PageCountMultipleOfFour} { O{0} }{%
	\prg_replicate:nn
	{
		\egreg_int_coremainder:nn { #1 + \getrefnumber{LastFrontmatterPage} + \getpagerefnumber{LastPage} } { 4 }
	}
	{ \thispagestyle{empty}\null\clearpage }
}
\NewDocumentCommand{\@PageCountMultipleOfTwo} { O{0} }{%
	\prg_replicate:nn
	{
		\egreg_int_coremainder:nn { #1 + \getrefnumber{LastFrontmatterPage} + \getpagerefnumber{LastPage} } { 2 }
	}
	{ \thispagestyle{empty}\null\clearpage }
}
\ExplSyntaxOff


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% PHOTO LAYOUT
%%
%%%%%

\renewcommand{\cleardoublepage}{%
	\clearpage
	\if@twoside 
		\ifodd\c@page
		\else
			\hbox{}
			\thispagestyle{empty}
			\newpage
			\if@twocolumn
				\hbox{}\newpage
			\fi
		\fi
	\fi
}
\newcommand*{\cleartoleftpage}{%	
	\clearpage
	\if@twoside
		\ifodd\c@page
			\hbox{}\newpage
			\if@twocolumn
				\hbox{}\newpage
			\fi
		\fi
	\fi
}

\newcommand{\blankpage}[1]{%
	\afterpage{\thispagestyle{empty}#1\clearpage}
}
\newcommand{\rightblankpage}[1]{%
	\ifodd\value{page}
		\expandafter\afterpage%
	\else
	\fi
	{\blankpage{#1}}
}
\newcommand{\leftblankpage}[1]{%
	\ifodd\value{page}
	\else
		\expandafter\afterpage%
	\fi
	{\blankpage{#1}}
}

% helper
\newcommand{\TikzAnchor}[2]{#1 #2}
\def\@PSAnchor#1#2{#1 #2}
\newlength{\PhotoWidth}
\newlength{\PhotoHeight}
\newlength{\PhotoSkip}
\newlength{\PhotoRefSkip}
\newlength{\PhotoBigSkip}
\newlength{\@TextBoxWidth}
\newlength{\@TextBoxMaxWidth}
\newlength{\@TextBoxXMargin}
\newlength{\@TextBoxYMargin}
\newlength{\@XShift}
\newlength{\@XShiftLeft}
\newlength{\@XShiftRight}
\newlength{\@YShift}

\newlength{\@radius}
\renewcommand{\fboxsep}{0pt}
\setlength{\fboxrule}{0.0pt}
% \setlength{\@radius}{0.2mm}

\setlength{\PhotoRefSkip}{3pt}
\setlength{\PhotoSkip}{2mm}
\setlength{\PhotoBigSkip}{6mm}

\setlength{\@TextBoxWidth}{80mm}
\setlength{\@TextBoxXMargin}{10mm}
\setlength{\@TextBoxYMargin}{0mm}

% declare keys
\define@key{kvps}{anchor}{\def\@PSAnchor{#1}} % north | south
\define@key{kvps}{width}{\def\@PSWidth{#1}}
\define@key{kvps}{height}{\def\@PSHeight{#1}}	
\define@key{kvps}{xshift}{\def\@PSXShift{#1}}
\define@key{kvps}{yshift}{\def\@PSYShift{#1}}
\define@key{kvps}{lpstyle}{\def\@PSLeftPageStyle{#1}}
\define@key{kvps}{rpstyle}{\def\@PSRightPageStyle{#1}}
\define@key{kvps}{lpcode}{\def\@PSLeftPageCode{#1}}
\define@key{kvps}{rpcode}{\def\@PSRightPageCode{#1}}
\define@key{kvps}{boxcode}{\def\@PSTextBoxCode{#1}}
\define@key{kvps}{boxvpos}{\def\@PSTextBoxPosition{#1}}
% preset keys
\savekeys{kvps}{anchor, width,xshift,yshift,lpstyle,rpstyle,lpcode,rpcode,boxcode,boxvpos}
\presetkeys{kvps}%
{anchor=north west, width=2\paperwidth,xshift=0cm,yshift=0cm,lpstyle=empty,rpstyle=empty,lpcode={},rpcode={},boxcode={},boxvpos=top}%
{}
% command
\newcommand\PhotoSpread[2][]{
	%
	% [#1] : path to image file (mandatory)
	% [#2] : xanchor	= north | south
	%		 yanchor	= west  | east
	%		 width 		= image width (default to 2\paperwidth)
	%		 xshift		= image shift along x (0mm)
	%		 yshift		= image shift along y (0mm)
	%		 lpstyle	= fancyhdr left page style (empty)
	%        rpstyle	= fancyhdr right page style (empty)
	%		 lpcode		= code to execute on the left page ({})
	%        rpcode		= code to execute on the right page ({})
	%        boxcode	= code to put in the textbox ({})
	%        boxvpos	= top | bottom
	% 
	% help : https://tex.stackexchange.com/a/23865
	% help : https://tex.stackexchange.com/a/55656
	%

	% make sure to start on a left page
	% but do not break text flow around the double page
	\afterpage{%
    \clearpage% flush all other floats
    \ifodd\value{page}
    % \else% uncomment this else to get odd/even instead of even/odd
        \expandafter\afterpage% put it on the next page if this one is odd
    \fi
    {%
		\setkeys{kvps}{#1}{
			% \def\@PSAnchor{\TikzAnchor{\@PSYAnchor}{\@PSXAnchor}}
		% height and width of the image
		\settoheight{\PhotoHeight}{\includegraphics[width=\@PSWidth]{#2}}
		\settowidth{\PhotoWidth}{\includegraphics[width=\@PSWidth]{#2}}

		% correction of half pgflinewidth (Y)
		\IfSubStr{\@PSAnchor}{north}{\setlength{\@YShift}{\@PSYShift+0.5\pgflinewidth}}{}%
		\IfSubStr{\@PSAnchor}{south}{\setlength{\@YShift}{\@PSYShift-0.5\pgflinewidth}}{}%

		% % correction of half pgflinewidth (X)
		\IfSubStr{\@PSAnchor}{west}{%
			\setlength{\@XShiftLeft}{\@PSXShift-0.5\pgflinewidth}
			\setlength{\@XShiftRight}{\@PSXShift-0.5\pgflinewidth-\paperwidth}
		}{}
		\IfSubStr{\@PSAnchor}{east}{%
			\setlength{\@XShiftLeft}{\@PSXShift+0.5\pgflinewidth+\paperwidth}
			\setlength{\@XShiftRight}{\@PSXShift+0.5\pgflinewidth}
		}{}

		% ==========
		% Left page
		% ==========
		% \cleartoleftpage
		\thispagestyle{\@PSLeftPageStyle}
		\begin{tikzpicture}[remember picture, inner sep=0pt]
			% \coordinate NL_tl ($ ( A) + (0 ,\a) $);
			\node[anchor=\@PSAnchor, xshift=\@XShiftLeft, yshift=\@YShift] at (current page.\@PSAnchor){
				\includegraphics[width=\@PSWidth]{#2}};
			\coordinate[xshift=0.0\pgflinewidth] (TL) at (current bounding box.north west) {}; % top-left corner
			\coordinate[xshift=0.0\pgflinewidth] (BL) at (current bounding box.south west) {}; % bottom-left corner
			\pgfresetboundingbox
			\path[use as bounding box] (0,0);
			\filldraw[red] (TL) circle [radius=\@radius];
			\filldraw[red] (BL) circle [radius=\@radius];
		\end{tikzpicture}
		% if the picture is east aligned, the caption goes to the left page
		\IfSubStr{\@PSAnchor}{east}{
			\setlength{\@TextBoxMaxWidth}{2\paperwidth - (-\@PSXShift+\@PSWidth) - (\@BleedOuterMargin + \@SafeContentOuterMargin)}
			\setlength{\@TextBoxWidth}{\minof{\@TextBoxWidth}{\@TextBoxMaxWidth}}
			% \setlength{\@TextBoxWidth}{80mm}
			\ifdefstring{\@PSTextBoxPosition}{top}{
				\begin{tikzpicture}[remember picture, overlay, inner sep=0]
					\node [anchor=north east, xshift=-\@TextBoxXMargin, yshift=-\@TextBoxYMargin]  
						at (TL) {%
					\rotatebox{0}{\fbox{\parbox[t]{\@TextBoxWidth-\@TextBoxXMargin}{\@PSTextBoxCode}}}};
				\end{tikzpicture}
			}{}
			\ifdefstring{\@PSTextBoxPosition}{bottom}{
				\begin{tikzpicture}[remember picture, overlay, inner sep=0]
					\node [anchor=south east, xshift=-\@TextBoxXMargin, yshift=\@TextBoxYMargin] 
						at (BL) {%
					\rotatebox{0}{\fbox{\parbox[b]{\@TextBoxWidth-\@TextBoxXMargin}{\@PSTextBoxCode}}}};
				\end{tikzpicture}
			}{}
		}{}
		\@PSLeftPageCode
		% ==========
		% Right page
		% ==========
		\clearpage
		\thispagestyle{\@PSRightPageStyle}
		\begin{tikzpicture}[remember picture, inner sep=0pt]
			\node[anchor=\@PSAnchor, xshift=\@XShiftRight, yshift=\@YShift] at (current page.\@PSAnchor){
				\includegraphics[width=\@PSWidth]{#2}};
			\coordinate[xshift=0.25\pgflinewidth] (TR) at (current bounding box.north east) {}; % top-left corner
			\coordinate[xshift=0.25\pgflinewidth] (BR) at (current bounding box.south east) {}; % bottom-left corner
			\pgfresetboundingbox
			\path[use as bounding box] (0,0);
			\filldraw[red] (TR) circle [radius=\@radius];
			\filldraw[red] (BR) circle [radius=\@radius];
			% \draw[red] (BL) rectangle (TR); 
		\end{tikzpicture}
		% if the picture is west aligned, the caption goes to the right page
		\IfSubStr{\@PSAnchor}{west}{
			\setlength{\@TextBoxMaxWidth}{2\paperwidth - (\@PSXShift+\@PSWidth) - (\@BleedOuterMargin + \@SafeContentOuterMargin)}
			\setlength{\@TextBoxWidth}{\minof{\@TextBoxWidth}{\@TextBoxMaxWidth}}
			\ifdefstring{\@PSTextBoxPosition}{top}{
				\begin{tikzpicture}[remember picture, overlay, inner sep=0]
					\node [anchor=north west, xshift=\@TextBoxXMargin, yshift=-\@TextBoxYMargin]  
						at (TR) {%
					\rotatebox{0}{\fbox{\parbox[t]{\@TextBoxWidth-\@TextBoxXMargin}{\@PSTextBoxCode}}}};
				\end{tikzpicture}
			}{}
			\ifdefstring{\@PSTextBoxPosition}{bottom}{
				\begin{tikzpicture}[remember picture, overlay, inner sep=0]
					\node [anchor=south west, xshift=\@TextBoxXMargin, yshift=\@TextBoxYMargin] 
						at (BR) {%
					\rotatebox{0}{\fbox{\parbox[b]{\@TextBoxWidth-\@TextBoxXMargin}{\@PSTextBoxCode}}}};
				\end{tikzpicture}
			}{}
		}{}
		\@PSRightPageCode\clearpage}
    }%
	}
}


% declare keys
\define@key{kvpa}{anchor}{\def\@PSAnchor{#1}}
\define@key{kvpa}{node}{\def\@PSNode{#1}}
\define@key{kvpa}{gopt}{\def\@PSGraphicOptions{#1}}
\define@key{kvpa}{xshift}{\def\@PSXShift{#1}}
\define@key{kvpa}{yshift}{\def\@PSYShift{#1}}
\define@key{kvpa}{boxnode}{\def\@PSBoxNode{#1}}
\define@key{kvpa}{boxanchor}{\def\@PSBoxAnchor{#1}}
\define@key{kvpa}{boxtext}{\def\@PSBoxText{#1}}
\define@key{kvpa}{pcode}{\def\@PSPageCode{#1}}
% preset keys
\savekeys{kvpa}{node, anchor, gopt, xshift, yshift, code, boxnode, boxanchor, boxtext}
\presetkeys{kvpa}%
{node={current page.center}, anchor=center, gopt={}, xshift=0cm, yshift=0cm, pcode={}, boxnode=B, boxanchor=north, boxtext={}}
{}

\newcommand\Photo[2][]{
	%
	% [#1] : path to image file (mandatory)
	% [#2] : node		= tikz coords of photo insertion (current pag.center | (5mm,10mm) ...)
	%		 anchor		= tikz anchor for the photo (eg. north east | south west ...)
	%		 xshift		= image shift along x (0mm)
	%		 yshift		= image shift along y (0mm)
	%		 gopt 		= a list of graphic options passed to includegrapic (eg. {width=3cm} ...)
	%		 boxnode	= tikz coords of box insertion (current pag.center | BR ...)
	%		 boxanchor	= tikz anchor for the box (eg. north east | south west ...)
	%		 boxtext	= text content of the box
	%		 pcode		= code to expand at the end ({})
	% 
	% help : https://tex.stackexchange.com/a/127926/154815
	%
	\setkeys{kvpa}{#1}{
		
		% height and width of the image
		\settoheight{\PhotoHeight}{\expandafter\includegraphics\expandafter[\@PSGraphicOptions]{#2}}
		\settowidth{\PhotoWidth}{\expandafter\includegraphics\expandafter[\@PSGraphicOptions]{#2}}


		% correction of half pgflinewidth (Y)
		\setlength{\@YShift}{\@PSYShift}
		\IfSubStr{\@PSAnchor}{north}{\setlength{\@YShift}{\@PSYShift+0.5\pgflinewidth}}{}%
		\IfSubStr{\@PSAnchor}{south}{\setlength{\@YShift}{\@PSYShift-0.5\pgflinewidth}}{}%

		% correction of half pgflinewidth (X)
		\setlength{\@XShift}{\@PSXShift}
		\IfSubStr{\@PSAnchor}{west}{\setlength{\@XShift}{\@PSXShift-0.5\pgflinewidth}}{}
		\IfSubStr{\@PSAnchor}{east}{\setlength{\@XShiftRight}{\@PSXShift+0.5\pgflinewidth}}{}

		\begin{tikzpicture}[remember picture, inner sep=0pt]
			% \coordinate NL_tl ($ ( A) + (0 ,\a) $);
			\node[anchor=\@PSAnchor, xshift=\@XShift, yshift=\@YShift] 
				at (\@PSNode){%current page.\@PSAnchor
				\expandafter\includegraphics\expandafter[\@PSGraphicOptions]{#2}};
			% store points of interest
			\coordinate (TL) at (current bounding box.north west); 	% top-left corner
			\coordinate (BL) at (current bounding box.south west); 	% bottom-left corner
			\coordinate (TR) at (current bounding box.north east); 	% top-left corner
			\coordinate (BR) at (current bounding box.south east); 	% bottom-left corner
			\coordinate (T) at (current bounding box.north); 		% middle top
			\coordinate (B) at (current bounding box.south); 		% middle bottom
			\coordinate (L) at (current bounding box.west); 		% middle left
			\coordinate (R) at (current bounding box.east); 		% middle right
			% draw points of interest
			\filldraw[red] (TL) circle [radius=\@radius];
			\filldraw[red] (BL) circle [radius=\@radius];
			\filldraw[red] (TR) circle [radius=\@radius];
			\filldraw[red] (BR) circle [radius=\@radius];
			\filldraw[blue] (T) circle [radius=\@radius];
			\filldraw[blue] (B) circle [radius=\@radius];
			\filldraw[blue] (L) circle [radius=\@radius];
			\filldraw[blue] (R) circle [radius=\@radius];
			% expand boxtext
			\node[anchor=\@PSBoxAnchor] at (\@PSBoxNode) {\@PSBoxText};
			% reset the bounding box 
			% this is equivalent to the overlay option but it does not 
			% disable the bounding box which is required for computing points of interest
			\pgfresetboundingbox
			\path[use as bounding box] (0,0);
		\end{tikzpicture}
		\@PSPageCode
	}
}


% declare keys
\define@key{kvpsc}{node}{\def\@PCNode{#1}}
\define@key{kvpsc}{anchor}{\def\@PCAnchor{#1}}
\define@key{kvpsc}{ltitle}{\def\@PCListTitle{#1}}
\define@key{kvpsc}{title}{\def\@PCTitle{#1}}
\define@key{kvpsc}{xshift}{\def\@PCXShift{#1}}
\define@key{kvpsc}{yshift}{\def\@PCYShift{#1}}
% preset keys
\savekeys{kvpsc}{node, anchor, ltitle, title, xshift, yshift}
\presetkeys{kvpsc}%
{node=BR, anchor=south west, ltitle={}, title={}, xshift=0mm, yshift=0mm}%
{}

\RequirePackage{xstring}
\newsavebox{\@PCBox}
\newlength{\@PCYAdjust}
\newcommand\PhotoCaptionRef[2][]{
	%
	% [#1] : title 		= subcaption heading = list entry
	% [#2] : node		= insertion point as tikz node 
	%		 anchor		= tikz anchor (eg. north west | south east ...)
	%		 label		= label name for xref (eg. fig:name)
	%		 xshift		= image shift along x (0mm)
	%		 yshift		= image shift along y (0mm)
	% 
	\setkeys{kvpsc}{#1}{

		\captionsetup[subfigure]{style=PC,justification=centering}
		\IfSubStr{\@PCAnchor}{east}{
			\captionsetup[subfigure]{style=PC,justification=raggedleft}
		}{}
		\IfSubStr{\@PCAnchor}{west}{
			\captionsetup[subfigure]{style=PC,justification=raggedright}
		}{}
		
		\savebox{\@PCBox}{\fbox{\parbox[b]{10mm}{%
			\ifdefempty{\@PCTitle}{
				\captionof{subfigure}[\@PCListTitle]{}\label{#2}
			}{
				\captionof{subfigure}[\@PCListTitle]{\@PCTitle}\label{#2}
			}
		}}}
		\setlength{\@PCYAdjust}{0pt}
		\begin{tikzpicture}[remember picture, inner sep=0pt]
			\node[anchor=\@PCAnchor, xshift=\@PCXShift, yshift=\@PCYShift+\@PCYAdjust] 
				at (\@PCNode){%
					\usebox{\@PCBox}
			};
			\filldraw[red] (\@PCNode) circle [radius=\@radius];
			\coordinate[xshift=\@PCXShift, yshift=0mm] (A) at (\@PCNode);
			\filldraw[blue] (A) circle [radius=\@radius];
			\pgfresetboundingbox
			\path[use as bounding box] (0,0);
		\end{tikzpicture}
	}
}



%%%%%%%%%%
% CAPTION
%%%%%%%%%%


% declare keys
\define@key{kvpc}{node}{\def\@PCNode{#1}}
\define@key{kvpc}{anchor}{\def\@PCAnchor{#1}}
\define@key{kvpc}{width}{\def\@PCWidth{#1}}
\define@key{kvpc}{xshift}{\def\@PCXShift{#1}}
\define@key{kvpc}{yshift}{\def\@PCYShift{#1}}
\define@key{kvpc}{style}{\def\@PCStyle{#1}}
\define@key{kvpc}{ltitle}{\def\@PCListeTitle{#1}}
\define@key{kvpc}{title}{\def\@PCTitle{#1}}
\define@key{kvpc}{subtitle}{\def\@PCSubTitle{#1}}
\define@key{kvpc}{text}{\def\@PCText{#1}}

% preset keys
\savekeys{kvpc}{node, anchor, width, xshift, yshift, style, ltitle, title, subtitle, text}
\presetkeys{kvpc}%
{node=BR, anchor=south west, width=6cm, xshift=0mm, yshift=0mm, style=default, ltitle={}, title={}, subtitle={}, text={}}%
{}

\newcommand\PhotoCaption[2][]{
	%
	% [#2] : label 		= caption label for xref
	% [#1] : node		= insertion point as tikz node 
	%		 anchor		= tikz anchor (eg. north west | south east ...)
	%		 xshift		= image shift along x (0mm)
	%		 yshift		= image shift along y (0mm)
	%		 width		= width of the caption parbox (5cm)
	%		 style		= caption style (default)
	%		 ltitle		= caption title for list of figures
	%		 title		= caption title for page
	%		 subtitle	= subtitle
	%		 text		= additional caption text
	% 
	\setkeys{kvpc}{#1}{

		\ifdefempty{\@PCListeTitle}{\let\@PCListeTitle\@PCTitle}{}
		\def\@PCLAlign{}
		\def\@PCRAlign{}
		
		\captionsetup[figure]{style=\@PCStyle}
		\IfSubStr{\@PCAnchor}{east}{
			\captionsetup[figure]{justification=raggedleft}
			\def\@PCLAlign{\hspace*{\fill}}
		}{}
		\IfSubStr{\@PCAnchor}{west}{
			\captionsetup[figure]{justification=raggedright}
			\def\@PCTextAlignment{\raggedright}
			\def\@PCRAlign{\hspace*{\fill}}
		}{}
		
		
		\savebox{\@PCBox}{\fbox{\parbox[b]{\@PCWidth}{%
			% ~\rule[-0.5ex]{1pt}{2.6ex} \thefigure
			\captionof{figure}[\@PCListeTitle]{\@PCTitle}%
			\label{#2}%
			\vspace*{6pt}%
			{\@PCLAlign{\sffamily\it\scshape\@PCSubTitle}\@PCRAlign}\\[6pt]
			{\color{gray}\sffamily\small\@PCText}
		}}}
		

		\begin{tikzpicture}[remember picture, inner sep=0pt]
			\node[anchor=\@PCAnchor, xshift=\@PCXShift, yshift=\@PCYShift] 
				at (\@PCNode){%
					\usebox{\@PCBox}
			};
			\coordinate[xshift=\@PCXShift, yshift=\@PCYShift] (A) at (\@PCNode);
			\filldraw[red] (\@PCNode) circle [radius=\@radius];
			\filldraw[blue] (A) circle [radius=\@radius];
			\pgfresetboundingbox
			\path[use as bounding box] (0,0);
		\end{tikzpicture}
	}
}

%{coords to save}{new node name}
\newcommand{\savenode}[2]{
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\coordinate (#2) at (#1);
	\end{tikzpicture}
}
%{prefix}{new node name}
\newcommand{\savenodes}[1]{
	% call this macro to persiste all current coords of interest
	% in temporary registers with #1 prefix to reuse them
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\coordinate (#1tl) at (TL);
		\coordinate (#1tr) at (TR);
		\coordinate (#1bl) at (BL);
		\coordinate (#1br) at (BR);
		\coordinate (#1t) at (T);
		\coordinate (#1b) at (B);
		\coordinate (#1t) at (L);
		\coordinate (#1r) at (R);
	\end{tikzpicture}
}
%{tikz node calc}{new node name}
%
\newcommand{\calcnode}[2]{
	% example : \calcnode{(BR)+(20mm,-20mm)}{TMPNode}
	\def\calctoken{\coordinate (#2) at ($ #1 $);}
	% \showthe\calctoken
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\calctoken
	\end{tikzpicture}
}
\newcommand{\intersectnode}[2]{
	\begin{tikzpicture}[remember picture, inner sep=0pt]
		\draw[opacity=0.0] (#1) node (#2){};
	\end{tikzpicture}
}

\let\BleedInnerMargin\@BleedInnerMargin
\let\BleedOuterMargin\@BleedOuterMargin
\let\BleedBottomMargin\@BleedBottomMargin
\let\BleedTopMargin\@BleedTopMargin


\def\mkr{\make\rotatebox[origin=c]{0}{\mk}\;}
\def\mkd{\rotatebox[origin=c]{-90}{\mk}\;}
\def\mkl{\rotatebox[origin=c]{180}{\mk}\;}
\def\mku{\rotatebox[origin=c]{90}{\mk}\;}


\newlength{\mkwidth}
\setlength{\mkwidth}{5mm}
\def\mkcolor{\color{Tblue}}
\newcommand{\mk}[2][r]{%	
	\if#1r%
		\fbox{\parbox{\mkwidth}{\mkcolor\raggedright$\blacktriangleright$}}#2
	\fi
	\if#1t%
		\fbox{\parbox{\mkwidth}{\mkcolor\raggedright$\blacktriangle$}}#2
	\fi
	\if#1l%
		\fbox{\parbox{\mkwidth}{\mkcolor\raggedright$\blacktriangleleft$}}#2
	\fi
	\if#1b%
		\fbox{\parbox{\mkwidth}{\mkcolor\raggedright$\blacktriangledown$}}#2
	\fi}

\def\vsep{\raisebox{0.2ex}{| }}